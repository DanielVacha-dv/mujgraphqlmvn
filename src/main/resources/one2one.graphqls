type Person {
    id: ID!
    firstName: String!
    middleName: String
    lastName: String!
    age: Int!
    personInfo:personInfo!
}

type  personInfo {
    id: ID!
    personInfoS:String!
    suma : Int
    nationallity : String
    person:Person!
}

input CreatePersonInput {
    firstName: String!
    middleName: String
    lastName: String!
#    personInfo:CreatePersonInfoInput
}

input   CreatePersonInfoInput {
        personInfoS:String!
        suma : Int
        nationallity : String
#    person: CreatePersonInput
}

input UpdateNameInput{
    id: ID!
    firstName: String
    middleName: String
    lastName: String
}

input UpdateAgeInput{
    id: ID!
    age: Int!
}

#mutation makePersonPersonInfo($input1: CreatePersonInput!,$input2: CreatePersonInfoInput!) {
#    makePersonPersonInfo(input1: $input1,input2: $input2) {
#        firstName
#        middleName
#        lastName
#        age
#    }
#}
#{
#"input1": {
#"firstName": "Timicek",
#"lastName": "Komik",
#"middleName": "stredo"
#},
#
#"input2": {
#"personInfoS": "personalne tajne",
#"suma": 3 ,
#"nationallity": "CZ"
#}
#}


#{
#    allPeople {
#        id,
#        firstName,
#        lastName
#        personInfo {
#            personInfoS,
#            suma
#        }
#    }
#}

#
#mutation makePPInfo($input1: CreatePersonInput!,$input2: CreatePersonInfoInput!) {
#    makePPInfo(input1: $input1,input2: $input2) {
#        firstName
#    }
#}
#
#{
#"input1": {
#"firstName": "Tim",
#"middleName": "Alfred",
#"lastName": "Adams"
#},
#
#"input2": {
#"personInfoS": "personalne tajne",
#"suma": 3 ,
#"nationallity": "CZ"
#}
#}